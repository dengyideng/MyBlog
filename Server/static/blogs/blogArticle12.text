<p>Lock接口</p>

                                <p>锁是用来控制多个线程访问共享资源的方式。一般来说，一个锁能够防止多个线程同时访问共享资源（有的锁允许，比如读写锁）。</p>

                                <p>在<a href='http://lib.csdn.net/base/java' target='_blank'>Java&nbsp;</a>5之后，并发包新增了Lock接口用来实现锁功能，它提供了与synchronized关键字类似的同步功能，只是在使用时需要显示地获取和释放锁。虽然它缺少了（通过synchronized块或方法所提供的）隐式获取释放锁的便捷性，但是却拥有了锁获取与释放的可操作性、可中断的获取以及超时获取锁等多种synchronized关键字所不具备的同步特性。</p>

                                <p>使用synchronized关键字将会隐式的获取锁，但是它将锁的获取和释放固化了，也就是先获取再释放。当然，这种方式简化了同步的管理，可是扩展性没有显示的锁获取和释放来的好。</p>

                                <p>Lock接口提供的synchronized关键字不具备的主要特性：</p>

                                <p>1、尝试非阻塞的获取锁</p>

                                <p>2、能被中断的获取锁</p>

                                <p>3、超时获取锁</p>