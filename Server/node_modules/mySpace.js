var fs = require('fs'),
    url = require('url'),
    querystring = require('querystring'),
    request = require('request');

exports.mySpace = function(req, res){
	/*var retHtml = fs.readFileSync(BASE_DIR + '/static/html/index.html');
	console.log("index has already returned!");

	res.writeHead(200, {'Content-Type' : 'text/html'});
    res.write(retHtml);
    res.end();*/
    var params = {
        "blogger" : {
            "account" : 0,
            "photo" : "",
            "nickName" : "",
            "readCount" : 0,
            "blogsCount" : 0,
            "focusedCount" : 0,
            "allBlogsListByCategory" : {
                "web" : 0,
                "java" : 0,
                "cloud" : 0,
                "database" : 0,
                "android" : 0,
                "others" : 0
            }
        },
        "blog" : {
            "title" : "",
            "category" : "",
            "content" : ""
        },
        "blogs" : [],
        "comment" : []
    };

    /*{
        "commentTime" : "",
        "commentPers" : {
            "account" : 0,
            "photo" : "",
            "nickName" : ""
        },
        "commentText" : ""
    },{
        "blogId" : 0,
        "title" : ""
    }*/

    var queryStr = url.parse(req.url).query,
        queryParam = querystring.parse(queryStr);

    console.log(queryStr);

    var usersStr = fs.readFileSync(BASE_DIR + '/static/data/user.json');
    var users = JSON.parse(usersStr);
    var blogsStr = fs.readFileSync(BASE_DIR + '/static/data/blog.json');
    var blogs = JSON.parse(blogsStr);
    var commentStr = fs.readFileSync(BASE_DIR + '/static/data/comment.json');
    var comment = JSON.parse(commentStr);

    var blogMark = false, userMark = false, 
        blogIndex, userIndex;

    if(queryParam.loginaccount != 0){
        if(queryParam.blogid != null){
            var blogId = queryParam.blogid*1;
            for(var i in blogs.blogs){
                if(blogs.blogs[i].blogId == blogId){
                    blogMark = true;
                    blogIndex = i;
                    params.blog.title = blogs.blogs[i].title;
                    //params.blog.content = blogs.blogs[i].content;
                    params.blog.content = fs.readFileSync(BASE_DIR + '/static/blogs/' + blogs.blogs[i].content, 'utf8');
                    switch(blogs.blogs[i].category){
                        case 'web':
                            params.blog.category = '前端';
                            break;
                        case 'android':
                            params.blog.category = '移动开发';
                            break;
                        case 'cloud':
                            params.blog.category = '云计算';
                            break;
                        case 'java':
                            params.blog.category = 'Java开发';
                            break;
                        case 'database':
                            params.blog.category = '数据库';
                            break;
                        default:
                            params.blog.category = '其他';
                    }
                    break;
                }
            }

            if(!blogMark){
                console.log("can not find this blog!");
                return;
            }

            for(var i in users.users){
                //console.log(blogIndex);
                if(users.users[i].account == blogs.blogs[blogIndex].belong){
                    params.blogger.account = users.users[i].account;
                    params.blogger.photo = users.users[i].photo;
                    params.blogger.nickName = users.users[i].nickName;
                    params.blogger.readCount = users.users[i].readCount;
                    params.blogger.blogsCount = users.users[i].blogsCount;
                    params.blogger.focusedCount = users.users[i].focusedCount;

                    break;
                }
            }

            //allBlogsListByCategory
            for(var x in blogs.blogs){
                if(blogs.blogs[x].belong == blogs.blogs[blogIndex].belong){
                    switch(blogs.blogs[x].category){
                        case 'web':
                            params.blogger.allBlogsListByCategory.web += 1;
                            break;
                        case 'android':
                            params.blogger.allBlogsListByCategory.android += 1;
                            break;
                        case 'cloud':
                            params.blogger.allBlogsListByCategory.cloud += 1;
                            break;
                        case 'java':
                            params.blogger.allBlogsListByCategory.java += 1;
                            break;
                        case 'database':
                            params.blogger.allBlogsListByCategory.database += 1;
                            break;
                        default:
                            params.blogger.allBlogsListByCategory.others += 1;
                    }
                }
            }

            for(var i in comment.comment){
                if(comment.comment[i].blogId == blogId){
                    var commentTemp = {"commentPers" : {}};
                    commentTemp.commentTime = comment.comment[i].commentTime;
                    commentTemp.commentText = comment.comment[i].commentText;
                    for(var j in users.users){
                        if(users.users[j].account == comment.comment[i].commentPers){
                            commentTemp.commentPers.account = users.users[j].account;
                            commentTemp.commentPers.photo = users.users[j].photo;
                            commentTemp.commentPers.nickName = users.users[j].nickName;
                            break;
                        }
                    }

                    params.comment.push(commentTemp);
                }
            }

            //评论补足5个
            for(var i = 0; i < 5; i ++){
                if(params.comment[i] == undefined){
                    var commentTemp = {"commentPers" : {}};
                    commentTemp.commentTime = "";
                    commentTemp.commentText = "";
                    commentTemp.commentPers.account = 0;
                    commentTemp.commentPers.photo = "";
                    commentTemp.commentPers.nickName = "";

                    params.comment.push(commentTemp);
                }
            }

            console.log("mySpace has already returned!");
            console.log(params.comment.length);
            res.render(BASE_DIR + '/static/template/myBlogShow.jade', {"params" : params});

        }else if(queryParam.category != null){
            console.log("we are in partB now!");
            for(var i in users.users){
                if(users.users[i].account == queryParam.loginaccount*1){
                    userIndex = true;
 
                    params.blogger.account = users.users[i].account;
                    params.blogger.photo = users.users[i].photo;
                    params.blogger.nickName = users.users[i].nickName;
                    params.blogger.readCount = users.users[i].readCount;
                    params.blogger.blogsCount = users.users[i].blogsCount;
                    params.blogger.focusedCount = users.users[i].focusedCount;

                    break;
                }
            }

            if(!userIndex){
                console.log("can not find this user!");
                return;
            }

            for(var j in blogs.blogs){
                if(blogs.blogs[j].belong == queryParam.loginaccount*1){
                    if(blogs.blogs[j].category == queryParam.category){
                        var blogTemp = {};
                        blogTemp.blogId = blogs.blogs[j].blogId;
                        blogTemp.title = blogs.blogs[j].title;
                        params.blogs.push(blogTemp);
                    }

                    switch(blogs.blogs[j].category){
                        case 'web':
                            params.blogger.allBlogsListByCategory.web += 1;
                            break;
                        case 'android':
                            params.blogger.allBlogsListByCategory.android += 1;
                            break;
                        case 'cloud':
                            params.blogger.allBlogsListByCategory.cloud += 1;
                            break;
                        case 'java':
                            params.blogger.allBlogsListByCategory.java += 1;
                            break;
                        case 'database':
                            params.blogger.allBlogsListByCategory.database += 1;
                            break;
                        default:
                            params.blogger.allBlogsListByCategory.others += 1;
                    }
                }
            }

            //blogs补足10个
            for(var x = 0; x < 10; x ++){
                if(params.blogs[x] == undefined){
                    var blogTemp = {};
                    blogTemp.blogId = 0;
                    blogTemp.title = "";
                    params.blogs.push(blogTemp);
                }
            }

            console.log("mySpace has already returned!");
            //console.log(params.comment.length);
            res.render(BASE_DIR + '/static/template/mySpace.jade', {"params" : params});

        }else{
            for(var i in users.users){
                if(users.users[i].account == queryParam.loginaccount*1){
                    userIndex = true;
           
                    params.blogger.account = users.users[i].account;
                    params.blogger.photo = users.users[i].photo;
                    params.blogger.nickName = users.users[i].nickName;
                    params.blogger.readCount = users.users[i].readCount;
                    params.blogger.blogsCount = users.users[i].blogsCount;
                    params.blogger.focusedCount = users.users[i].focusedCount;

                    break;
                }
            }

            if(!userIndex){
                console.log("can not find this user!");
                return;
            }

            for(var j in blogs.blogs){
                if(blogs.blogs[j].belong == queryParam.loginaccount*1){
                    var blogTemp = {};
                    blogTemp.blogId = blogs.blogs[j].blogId;
                    blogTemp.title = blogs.blogs[j].title;
                    params.blogs.push(blogTemp);

                    switch(blogs.blogs[j].category){
                        case 'web':
                            params.blogger.allBlogsListByCategory.web += 1;
                            break;
                        case 'android':
                            params.blogger.allBlogsListByCategory.android += 1;
                            break;
                        case 'cloud':
                            params.blogger.allBlogsListByCategory.cloud += 1;
                            break;
                        case 'java':
                            params.blogger.allBlogsListByCategory.java += 1;
                            break;
                        case 'database':
                            params.blogger.allBlogsListByCategory.database += 1;
                            break;
                        default:
                            params.blogger.allBlogsListByCategory.others += 1;
                    }
                }
            }

            //blogs补足10个
            for(var x = 0; x < 10; x ++){
                if(params.blogs[x] == undefined){
                    var blogTemp = {};
                    blogTemp.blogId = 0;
                    blogTemp.title = "";
                    params.blogs.push(blogTemp);
                }
            }

            console.log("mySpace has already returned!");
            //console.log(params.comment.length);
            res.render(BASE_DIR + '/static/template/mySpace.jade', {"params" : params});

        }
    }else{
        console.log("please login first!");
        request("http://127.0.0.1:1337/login", function(err, response, body){
            if(response.statusCode == 200){
                //console.log(body);
                     
                res.writeHead(200, {'Content-Type' : 'text/html'});
                res.write(body);
                res.end();
                //console.log("now we are in callback function!");
            }
        });

    }

    //console.log("blogsShow has already returned!");
    //console.log(params.comment.length);
    //res.render(BASE_DIR + '/static/template/blogsShow.jade', {"params" : params});
};