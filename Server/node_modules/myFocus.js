var fs = require('fs'),
    url = require('url'),
    querystring = require('querystring');

exports.myFocus = function(req, res){
	/*var retHtml = fs.readFileSync(BASE_DIR + '/static/html/index.html');
	console.log("index has already returned!");

	res.writeHead(200, {'Content-Type' : 'text/html'});
    res.write(retHtml);
    res.end();*/
    var params = {
        "blogger" : {
            "account" : 0,
            "photo" : "",
            "nickName" : "",
            "readCount" : 0,
            "blogsCount" : 0,
            "focusedCount" : 0,
            "allBlogsListByCategory" : {
                "web" : 0,
                "java" : 0,
                "cloud" : 0,
                "database" : 0,
                "android" : 0,
                "others" : 0
            }
        },
        "myFocus" : []
    };

    /*{
        "account" : 0,
        "photo" : "",
        "nickName" : "",
        "city" : "",
        "career" : "",
        "blogsCount" : 0,
        "readCount" : 0
    }*/

    var queryStr = url.parse(req.url).query,
        queryParam = querystring.parse(queryStr);

    console.log(queryStr);

    var usersStr = fs.readFileSync(BASE_DIR + '/static/data/user.json');
    var users = JSON.parse(usersStr);
    var blogsStr = fs.readFileSync(BASE_DIR + '/static/data/blog.json');
    var blogs = JSON.parse(blogsStr);
    //var commentStr = fs.readFileSync(BASE_DIR + '/static/data/comment.json');
    //var comment = JSON.parse(commentStr);

    var blogMark = false, userMark = false, 
        blogIndex, userIndex;

    var account = queryParam.loginaccount*1;
    for(var i in users.users){
        if(users.users[i].account == account){
            userMark = true;

            params.blogger.account = users.users[i].account;
            params.blogger.photo = users.users[i].photo;
            params.blogger.nickName = users.users[i].nickName;
            params.blogger.readCount = users.users[i].readCount;
            params.blogger.blogsCount = users.users[i].blogsCount;
            params.blogger.focusedCount = users.users[i].focusedCount;

            for(var j in users.users[i].myFocus){
                for(var x in users.users){
                    if(users.users[x].account == users.users[i].myFocus[j]){
                        var userTemp = {};
                        userTemp.account = users.users[x].account;
                        userTemp.photo = users.users[x].photo;
                        userTemp.nickName = users.users[x].nickName;
                        userTemp.city = users.users[x].city;
                        userTemp.career = users.users[x].career;
                        userTemp.readCount = users.users[x].readCount;
                        userTemp.blogsCount = users.users[x].blogsCount;

                        params.myFocus.push(userTemp);
                        break;
                    }
                }
            }
            break;
        }
    }

    if(!userMark){
        console.log("can not find this user!");
        return;
    }

    for(var x in blogs.blogs){
        if(blogs.blogs[x].belong == account){
            switch(blogs.blogs[x].category){
                case 'web':
                    params.blogger.allBlogsListByCategory.web += 1;
                    break;
                case 'android':
                    params.blogger.allBlogsListByCategory.android += 1;
                    break;
                case 'cloud':
                    params.blogger.allBlogsListByCategory.cloud += 1;
                    break;
                case 'java':
                    params.blogger.allBlogsListByCategory.java += 1;
                    break;
                case 'database':
                    params.blogger.allBlogsListByCategory.database += 1;
                    break;
                default:
                    params.blogger.allBlogsListByCategory.others += 1;
            }
        }
    }

    //补齐6个
    for(var i = 0; i < 6; i ++){
        if(params.myFocus[i] == undefined){
            var userTemp = {};
            userTemp.account = 0;
            userTemp.nickName = "";
            userTemp.photo = "";
            userTemp.city = "";
            userTemp.career = "";
            userTemp.readCount = 0;
            userTemp.blogsCount = 0;

            params.myFocus.push(userTemp);
        }
    }

    console.log("myFocus has already returned!");
    //console.log(params.comment.length);
    res.render(BASE_DIR + '/static/template/myFocus.jade', {"params" : params});
};