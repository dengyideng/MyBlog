var fs = require('fs'),
    url = require('url'),
    querystring = require('querystring');

exports.index = function(req, res){
	/*var retHtml = fs.readFileSync(BASE_DIR + '/static/html/index.html');
	console.log("index has already returned!");

	res.writeHead(200, {'Content-Type' : 'text/html'});
    res.write(retHtml);
    res.end();*/
    var params = {
        "login" : {
            "account" : 0,
            "nickName" : ""
        },
    	"blogs" : [{
            "account" : 0,
    		"photo" : "",
    		"nickName" : "",
            "blogId" : 0,
    		"title" : "",
    		"content" : "",
    		"category" : "",
    		"createTime" : "",
    		"views" : 0
    	},{
            "account" : 0,
    		"photo" : "",
    		"nickName" : "",
            "blogId" : 0,
    		"title" : "",
    		"content" : "",
    		"category" : "",
    		"createTime" : "",
    		"views" : 0
    	},{
            "account" : 0,
    		"photo" : "",
    		"nickName" : "",
            "blogId" : 0,
    		"title" : "",
    		"content" : "",
    		"category" : "",
    		"createTime" : "",
    		"views" : 0
    	},{
            "account" : 0,
    		"photo" : "",
    		"nickName" : "",
            "blogId" : 0,
    		"title" : "",
    		"content" : "",
    		"category" : "",
    		"createTime" : "",
    		"views" : 0
    	},{
            "account" : 0,
    		"photo" : "",
    		"nickName" : "",
            "blogId" : 0,
    		"title" : "",
    		"content" : "",
    		"category" : "",
    		"createTime" : "",
    		"views" : 0
    	}],
    	"count" : 0,
    	"pageCount" : 0,
    	"pages" : [],
    	"chooseIndex" : [],
    	"previous" : -1,
    	"next" : -1,
    	"previousEllipsis" : -1,
    	"nextEllipsis" : -1
    };

    var queryStr = url.parse(req.url).query,
        queryParam = querystring.parse(queryStr);

    console.log(queryStr);

    var usersStr = fs.readFileSync(BASE_DIR + '/static/data/user.json');
    var users = JSON.parse(usersStr);
    var blogsStr = fs.readFileSync(BASE_DIR + '/static/data/blog.json');
    var blogs = JSON.parse(blogsStr);

    var blogMark, userMark, blogIndex, userIndex;

    if(queryStr == null){
    	for(var i = 0; i < 5; i++){
    		var account = blogs.blogs[i].belong,
    		    userMark = 0;
    		for(var j in users.users){
    			if(users.users[j].account == account){
                    userMark = 1;
 
                    params.blogs[i].account = users.users[j].account;
    				params.blogs[i].photo = users.users[j].photo;
    				params.blogs[i].nickName = users.users[j].nickName;
                    params.blogs[i].blogId = blogs.blogs[i].blogId;
    				params.blogs[i].title = blogs.blogs[i].title;
    				//params.blogs[i].content = blogs.blogs[i].content;
                    params.blogs[i].content = fs.readFileSync(BASE_DIR + '/static/blogs/' + blogs.blogs[i].content, 'utf8');
                    //console.log(params.blogs[i].content);

    				params.blogs[i].createTime = blogs.blogs[i].createTime;
    				params.blogs[i].views = blogs.blogs[i].readCount;
    				switch(blogs.blogs[i].category){
    					case 'web':
    					    params.blogs[i].category = '前端';
    					    break;
    					case 'android':
    					    params.blogs[i].category = '移动开发';
    					    break;
    					case 'cloud':
    					    params.blogs[i].category = '云计算';
    					    break;
    					case 'java':
    					    params.blogs[i].category = 'Java开发';
    					    break;
    					case 'database':
    					    params.blogs[i].category = '数据库';
    					    break;
    					default:
    					    params.blogs[i].category = '其他';
    				}
    				break;
    			}
    		}
    		if(userMark == 0){
    			console.log("can not find this user!");
    			return;
    		}
    	}

    	params.count = blogs.blogs.length;
    	params.pageCount = Math.ceil(blogs.blogs.length / 5);
    	params.pages = [1, 2, 3];
    	params.chooseIndex = [1, 0, 0];
    	/*params.previous = -1;
    	params.next = 1;
    	params.previousEllipsis = -1;
    	params.nextEllipsis = 1;	*/
    }else if(queryParam.loginaccount*1 == 0){
    	for(var i = 0; i < 5; i++){
    		if(blogs.blogs[(queryParam.page - 1)*5 + i] != null){
    		    var account = blogs.blogs[(queryParam.page - 1)*5 + i].belong,
    		        userMark = 0;
    		    for(var j in users.users){
    			    if(users.users[j].account == account){
                        userMark = 1;

                        params.blogs[i].account = users.users[j].account;
    				    params.blogs[i].photo = users.users[j].photo;
    				    params.blogs[i].nickName = users.users[j].nickName;
                        params.blogs[i].blogId = blogs.blogs[(queryParam.page - 1)*5 + i].blogId;
    				    params.blogs[i].title = blogs.blogs[(queryParam.page - 1)*5 + i].title;
    				    //params.blogs[i].content = blogs.blogs[i].content;
                        params.blogs[i].content = fs.readFileSync(BASE_DIR + '/static/blogs/' + blogs.blogs[(queryParam.page - 1)*5 + i].content, 'utf8');
                        //console.log(params.blogs[i].content);

    				    params.blogs[i].createTime = blogs.blogs[(queryParam.page - 1)*5 + i].createTime;
    				    params.blogs[i].views = blogs.blogs[(queryParam.page - 1)*5 + i].readCount;
    				    switch(blogs.blogs[(queryParam.page - 1)*5 + i].category){
    					    case 'web':
    					        params.blogs[i].category = '前端';
    					        break;
    					    case 'android':
    					        params.blogs[i].category = '移动开发';
    					        break;
    					    case 'cloud':
    					        params.blogs[i].category = '云计算';
    					        break;
    					    case 'java':
    					        params.blogs[i].category = 'Java开发';
    					        break;
    					    case 'database':
    					        params.blogs[i].category = '数据库';
    					        break;
    					    default:
    					        params.blogs[i].category = '其他';
    				    }
    				    break;
    				}
    			}
    		}else{
    			break;
    		}
    		if(userMark == 0){
    			console.log("can not find this user!");
    			return;
    		}
    	}

    	params.count = blogs.blogs.length;
    	params.pageCount = Math.ceil(blogs.blogs.length/5);
    	if(queryParam.page%3 == 1){
    		params.pages = [queryParam.page*1, queryParam.page*1 + 1, queryParam.page*1 + 2];
    		params.chooseIndex = [1, 0, 0];
    	}else if(queryParam.page%3 == 2){
    		params.pages = [queryParam.page*1 - 1, queryParam.page*1, queryParam.page*1 + 1];
    		params.chooseIndex = [0, 1, 0];
    	}else{
    		params.pages = [queryParam.page*1 - 2, queryParam.page*1 - 1, queryParam.page*1];
    		params.chooseIndex = [0, 0, 1];
    	}
    	/*params.previous = -1;
    	params.next = 1;
    	params.previousEllipsis = -1;
    	params.nextEllipsis = 1;	*/
    }else{
        for(var i = 0; i < 5; i++){
            if(blogs.blogs[(queryParam.page - 1)*5 + i] != null){
                var account = blogs.blogs[(queryParam.page - 1)*5 + i].belong,
                    userMark = 0;
                for(var j in users.users){
                    if(users.users[j].account == account){
                        userMark = 1;

                        params.blogs[i].account = users.users[j].account;
                        params.blogs[i].photo = users.users[j].photo;
                        params.blogs[i].nickName = users.users[j].nickName;
                        params.blogs[i].blogId = blogs.blogs[(queryParam.page - 1)*5 + i].blogId;
                        params.blogs[i].title = blogs.blogs[(queryParam.page - 1)*5 + i].title;
                        //params.blogs[i].content = blogs.blogs[i].content;
                        params.blogs[i].content = fs.readFileSync(BASE_DIR + '/static/blogs/' + blogs.blogs[(queryParam.page - 1)*5 + i].content, 'utf8');
                        //console.log(params.blogs[i].content);

                        params.blogs[i].createTime = blogs.blogs[(queryParam.page - 1)*5 + i].createTime;
                        params.blogs[i].views = blogs.blogs[(queryParam.page - 1)*5 + i].readCount;
                        switch(blogs.blogs[(queryParam.page - 1)*5 + i].category){
                            case 'web':
                                params.blogs[i].category = '前端';
                                break;
                            case 'android':
                                params.blogs[i].category = '移动开发';
                                break;
                            case 'cloud':
                                params.blogs[i].category = '云计算';
                                break;
                            case 'java':
                                params.blogs[i].category = 'Java开发';
                                break;
                            case 'database':
                                params.blogs[i].category = '数据库';
                                break;
                            default:
                                params.blogs[i].category = '其他';
                        }
                        break;
                    }
                }
            }else{
                break;
            }
            if(userMark == 0){
                console.log("can not find this user!");
                return;
            }
        }

        params.count = blogs.blogs.length;
        params.pageCount = Math.ceil(blogs.blogs.length/5);
        if(queryParam.page%3 == 1){
            params.pages = [queryParam.page*1, queryParam.page*1 + 1, queryParam.page*1 + 2];
            params.chooseIndex = [1, 0, 0];
        }else if(queryParam.page%3 == 2){
            params.pages = [queryParam.page*1 - 1, queryParam.page*1, queryParam.page*1 + 1];
            params.chooseIndex = [0, 1, 0];
        }else{
            params.pages = [queryParam.page*1 - 2, queryParam.page*1 - 1, queryParam.page*1];
            params.chooseIndex = [0, 0, 1];
        }
        /*params.previous = -1;
        params.next = 1;
        params.previousEllipsis = -1;
        params.nextEllipsis = 1;    */

        for(var x in users.users){
            if(users.users[x].account == queryParam.loginaccount*1){
                params.login.account = users.users[x].account;
                params.login.nickName = users.users[x].nickName;
                break;
            }
        }
    }

    console.log("index has already returned!");
    //console.log(params);
    res.render(BASE_DIR + '/static/template/index.jade', {"params" : params});

    //console.log(params.test);
};
